name: build

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/build.yml
      - bin/build-matrix.go

env:
  GHCR_IMAGE: ghcr.io/emgag/php
  GHCR_USER: emgag-service

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.x
      - name: Generate build matrix
        id: matrix
        run: go run bin/build-matrix.go

  base:
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    needs: [matrix]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to github docker registry
        uses: azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }})
        run: >
          docker build --no-cache --pull
          --build-arg VERSION=${{ matrix.upstream }}
          --build-arg VERSION_MAJOR=${{ matrix.upstream_major }}
          --build-arg VERSION_MINOR=${{ matrix.upstream_minor }}
          --build-arg VERSION_PATCH=${{ matrix.upstream_patch }}
          --build-arg FLAVOUR=${{ matrix.flavour }}
          -t ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}
          base

      - name: Push ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }})
        run: docker push ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}

  build:
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    needs: [matrix, base]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to github docker registry
        uses: azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }}-build)
        run: >
          docker build --no-cache --pull
          --build-arg VERSION=${{ matrix.upstream }}
          --build-arg VERSION_MAJOR=${{ matrix.upstream_major }}
          --build-arg VERSION_MINOR=${{ matrix.upstream_minor }}
          --build-arg VERSION_PATCH=${{ matrix.upstream_patch }}
          --build-arg FLAVOUR=${{ matrix.flavour }}
          -t ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}-build
          build

      - name: Push ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }}-build)
        run: docker push ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}-build

  cron:
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    needs: [matrix, base]
    steps:
      - name: Checkout
        if: ${{ matrix.flavour == 'cli' }}
        uses: actions/checkout@v2

      - name: Login to github docker registry
        if: ${{ matrix.flavour == 'cli' }}
        uses: azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build cron image (${{ matrix.upstream}}{{ matrix.revision }}-cron)
        if: ${{ matrix.flavour == 'cli' }}
        run: >
          docker build --no-cache --pull
          --build-arg VERSION=${{ matrix.upstream }}
          --build-arg FLAVOUR=cli
          -t ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-cron
          cron

      - name: Push cron image (${{ matrix.upstream}}{{ matrix.revision }}-cron)
        if: ${{ matrix.flavour == 'cli' }}
        run: docker push ${{ env.GHCR_IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-cron
