name: build

on:
  push:
#    paths:
#    - .github/workflows/build.yml
#    - bin/build-matrix.go

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
    - id: step1
      run: echo "::set-output name=test::hello"
    - id: step2
      run: echo "::set-output name=test::world"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

#env:
#  IMAGE: ghcr.io/emgag/php
#  REPO_OWNER: emgag-service

#jobs:
#  gen:
#    runs-on: ubuntu-latest
#    outputs:
#      matrix: ${{ steps.genmatrix.output.matrix }}
#      blubber: ${{ steps.genmatrix.output.blubber }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up Go
#        uses: actions/setup-go@v1
#        with:
#          go-version: 1.15.x
#      - name: Generate build matrix
#        id: genmatrix
#        run: go run bin/build-matrix.go
#        run: echo "::set-output name=blubber::jajaja"
#      - name: debug
#        run: echo "${{ steps.genmatrix.outputs.blubber }}"

#  debug:
#    runs-on: ubuntu-latest
#    needs: [gen]
#    steps:
#      - name: dump output
#        env:
#          OUTPUT: "${{ needs.gen.outputs.blubber }}"
#        run: echo "$OUTPUT"

#  base:
#    strategy:
#      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
#    runs-on: ubuntu-latest
#    needs: [matrix]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Login to github docker registry
#        uses: azure/docker-login@v1
#        with:
#          login-server: ghcr.io
#          username: ${{ env.REPO_OWNER }}
#          password: ${{ secrets.CR_PAT }}
#
#      - name: Build ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }}${{ matrix.suffix }})
#        run: >
#          docker build --no-cache --pull \
#          --build-arg VERSION=${{ matrix.upstream }} \
#          --build-arg FLAVOUR=${{ matrix.flavour }} \
#          -t ${{ env.IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}${{ matrix.suffix }} \
#          ${{ matrix.build }}
#
#      - name: Push ${{ matrix.source }} image (${{ matrix.upstream}}{{ matrix.revision }}-${{ matrix.flavour }}${{ matrix.suffix }})
#        run: docker push ${{ env.IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-${{ matrix.flavour }}${{ matrix.suffix }}
#
#  cron:
#    strategy:
#      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
#    runs-on: ubuntu-latest
#    needs: [matrix, base]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Login to github docker registry
#        uses: azure/docker-login@v1
#        with:
#          login-server: ghcr.io
#          username: ${{ env.REPO_OWNER }}
#          password: ${{ secrets.CR_PAT }}
#
#      - name: Build cron image (${{ matrix.upstream}}{{ matrix.revision }}-cron)
#        run: >
#          docker build --no-cache --pull \
#          --build-arg VERSION=${{ matrix.upstream }} \
#          --build-arg FLAVOUR=cli \
#          -t ${{ env.IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-cron \
#          base
#
#      - name: Push cron image (${{ matrix.upstream}}{{ matrix.revision }}-cron)
#        run: docker push ${{ env.IMAGE }}:${{ matrix.upstream }}${{ matrix.revision }}-cron
